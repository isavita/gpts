# LangChain

```elixir
Mix.install(
  [
    :jason,
    :req,
    :langchain
  ],
  config: [
    langchain: [
      openai_key: System.fetch_env!("LB_OPENAI_API_KEY"),
      openai_org_id: System.fetch_env!("LB_OPENAI_ORG_ID")
    ]
  ]
)

# Application.put_env(:langchain, :openai_key, System.fetch_env!("LB_OPENAI_API_KEY"))
# Application.put_env(:langchain, :openai_org_id, System.fetch_env!("LB_OPENAI_ORG_ID"))
```

## Getting Started

```elixir
alias LangChain.Chains.LLMChain
alias LangChain.ChatModels.ChatOpenAI
alias LangChain.Message

sys_prompt = """
You are an elixir developer obsests with elixir. You reply to every question/greeting with elixir code.
Even if you give simple reply you will use something like IO.puts("Hi!").
"""

{:ok, updated_chain, response} =
  %{llm: ChatOpenAI.new!(%{model: "gpt-3.5-turbo-0125"})}
  |> LLMChain.new!()
  |> LLMChain.add_message(Message.new_system!(sys_prompt))
  |> LLMChain.add_message(Message.new_user!("Hello world"))
  |> LLMChain.run()
```

````elixir
{response.content, response.status}

response.content
|> String.replace(~r/```elixir/, "")
|> String.replace(~r/```/, "")
|> Code.eval_string()
````

## Streaming response

```elixir
alias LangChain.MessageDelta

callback = fn
  %MessageDelta{} = data ->
    # we received a piece of data
    IO.write(data.content)

  %Message{} = data ->
    IO.puts("")
    IO.puts("")
    IO.inspect(data.content, label: "COMPLETED MESSAGE")
end

{:ok, _updated_chain, response} =
  %{llm: ChatOpenAI.new!(%{model: "gpt-3.5-turbo-0125", stream: true})}
  |> LLMChain.new!()
  |> LLMChain.add_messages([
    Message.new_system!("You are a helpful assistant."),
    Message.new_user!("Write a haiku about the capital of the United Kingdom")
  ])
  |> LLMChain.run(callback_fn: callback)
```

<!-- livebook:{"offset":1790,"stamp":{"token":"XCP.Yw9RzkbKmXRbkqQhzXKB6NXZ2YUrzgUTGJjuPcNIWnlMf1coM7haA2aMPdsoeDv1uiecHuZBzK6GOuaWQH2ZJoDGAomDsEXcsM9-49_hX8aLKFIfkyxS37UIK6JxeJXzkYGiXoO4kPHXkmc","version":2}} -->
